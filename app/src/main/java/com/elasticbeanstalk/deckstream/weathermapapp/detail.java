package com.elasticbeanstalk.deckstream.weathermapapp;import android.annotation.TargetApi;import android.graphics.Typeface;import android.os.Build;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.TableLayout;import android.widget.TableRow;import android.widget.TextView;import org.json.JSONException;import org.json.JSONObject;import java.util.Calendar;import java.util.Date;public class detail extends AppCompatActivity  implements View.OnClickListener{    JSONObject json;    @TargetApi(Build.VERSION_CODES.M)    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_detail);        Bundle extras = getIntent().getExtras();        String need = null;        String city = null;        String state = null;        Boolean us= null;        if (savedInstanceState == null) {            if(extras == null) {                need= null;                city= null;                state= null;        } else {            need= extras.getString("json");                city= extras.getString("city");;                state= extras.getString("state");;            us = extras.getBoolean("degree");            }    } else {        need= (String) savedInstanceState.getSerializable("json");            city= (String) savedInstanceState.getSerializable("city");            state= (String) savedInstanceState.getSerializable("state");    }        try {             json = new JSONObject(need);        } catch (JSONException e) {            e.printStackTrace();        }        TableLayout tl = (TableLayout) findViewById(R.id.hour);        TableLayout tl2= (TableLayout) findViewById(R.id.hour2);        TextView temper = (TextView) findViewById(R.id.temper);        if(us){temper.setText("Temp(" + " \u2109" + ")");}        else {temper.setText("Temp(" + " \u2103"+")");}        for(int i =0; i<48; i++)        {            try {                String time = json.getJSONArray("0").getString(16 + i);                String temp   =  String.valueOf((int) json.getJSONObject("hourly").getJSONArray("data").getJSONObject(i).getDouble("temperature"));                String icon   =  json.getJSONObject("hourly").getJSONArray("data").getJSONObject(i).getString("icon");                TableRow tr = new TableRow(this);                TextView one=  new TextView(this);                    ImageView two=  new ImageView(this);                TextView three=  new TextView(this);                one.setText(time);                one.setTypeface(Typeface.DEFAULT_BOLD);                if(icon.equals("clear-day")  )                {                 two.setImageResource(R.drawable.clear);}                if(icon.equals("clear-night"))                {    two.setImageResource(R.drawable.clear_night);}                if(icon.equals("rain"))                {  two.setImageResource(R.drawable.rain);}                if(icon.equals("snow")  )                { two.setImageResource(R.drawable.snow);}                if(icon.equals( "sleet"))                { two.setImageResource(R.drawable.sleet);}                if(icon.equals("wind")  )                { two.setImageResource(R.drawable.wind);}                if(icon.equals( "fog"))                { two.setImageResource(R.drawable.fog);}                if(icon.equals( "cloudy"))                { two.setImageResource(R.drawable.cloudy);}                if(icon.equals( "partly-cloudy-day"))                { two.setImageResource(R.drawable.cloud_day);}                if(icon.equals( "partly-cloudy-night"))                { two.setImageResource(R.drawable.cloud_night);}                three.setText(temp);                tr.addView(one);                tr.addView(two);                tr.addView(three);                tr.requestLayout();                one.setHeight(150);                two.getLayoutParams().height = 150;             two.getLayoutParams().width = 1;                three.setHeight(150);                TableRow.LayoutParams llp = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT, TableRow.LayoutParams.WRAP_CONTENT);                if(i % 2 == 0){tr.setBackgroundColor(getResources().getColor(R.color.gray));}                tr.setLayoutParams(llp);                if(i<24)                tl.addView(tr, llp);                else tl2.addView(tr, llp);            } catch (JSONException e) {                e.printStackTrace();            }        }        String title_text = "More Detail for " + city + ", " + state ;        TableLayout plus = (TableLayout) findViewById(R.id.plus);        plus.setOnClickListener(this);        TextView title = (TextView) findViewById(R.id.title);        title.setText(title_text);        for(int i =1; i<8; i++)        {            try {                String degree ;                if(us) {degree =  "\u2109";}                else{degree =  "\u2103";}                String temperature_min = String.valueOf( json.getJSONObject("daily").getJSONArray("data").getJSONObject(i).getInt("temperatureMin"));                String temperature_max = String.valueOf(json.getJSONObject("daily").getJSONArray("data").getJSONObject(i).getInt("temperatureMax"));                String temp = "Min: "+ temperature_min +degree+"| "  + "Max: " +temperature_max+degree;                String icon   =  json.getJSONObject("daily").getJSONArray("data").getJSONObject(i).getString("icon");                ImageView two= (ImageView) icon_select(i);                TextView three=  (TextView) temp_select(i);                TextView date = (TextView) date_select(i);                three.setText(temp);                if(icon.equals("clear-day")  )                {                 two.setImageResource(R.drawable.clear);}                if(icon.equals("clear-night"))                {    two.setImageResource(R.drawable.clear_night);}                if(icon.equals("rain"))                {  two.setImageResource(R.drawable.rain);}                if(icon.equals("snow")  )                { two.setImageResource(R.drawable.snow);}                if(icon.equals( "sleet"))                { two.setImageResource(R.drawable.sleet);}                if(icon.equals("wind")  )                { two.setImageResource(R.drawable.wind);}                if(icon.equals( "fog"))                { two.setImageResource(R.drawable.fog);}                if(icon.equals( "cloudy"))                { two.setImageResource(R.drawable.cloudy);}                if(icon.equals( "partly-cloudy-day"))                { two.setImageResource(R.drawable.cloud_day);}                if(icon.equals( "partly-cloudy-night"))                { two.setImageResource(R.drawable.cloud_night);}                int unix = json.getJSONObject("daily").getJSONArray("data").getJSONObject(i).getInt("time");                Date time = new Date(unix*1000); // *1000 is to convert seconds to milliseconds                Calendar cal = Calendar.getInstance();                cal.setTime(time);                int day = cal.get(Calendar.DAY_OF_MONTH);                String month = monthString(cal.get(Calendar.MONTH));                String weekDay = null;                int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);                if (dayOfWeek  ==  6) {                    weekDay = "Monday";                } else if (dayOfWeek  == 7) {                    weekDay = "Tuesday";                } else if (dayOfWeek  == 1) {                    weekDay = "Wednesday";                } else if (dayOfWeek  == 2) {                    weekDay = "Thursday";                } else if (dayOfWeek  == 3) {                    weekDay = "Friday";                } else if (dayOfWeek  == 4) {                    weekDay = "Saturday";                } else if (dayOfWeek  == 5) {                    weekDay = "Sunday";                }                String date_string = weekDay+ ", " + month +" " +  String.valueOf(day+2);              date.setText(date_string);            } catch (JSONException e) {                e.printStackTrace();            }        }        Button hour = (Button) findViewById(R.id.button);        Button day = (Button) findViewById(R.id.button1);        hour.setOnClickListener(this);        day.setOnClickListener(this);    }    public View icon_select(int i){        if (i == 1) return findViewById(R.id.seven_one_img);        if (i == 2) return findViewById(R.id.seven_two_img);        if (i == 3) return findViewById(R.id.seven_three_img);        if (i == 4) return findViewById(R.id.seven_four_img);        if (i == 5) return findViewById(R.id.seven_five_img);        if (i == 6) return findViewById(R.id.seven_six_img);        if (i == 7) return findViewById(R.id.seven_seven_img);        return null;    }    public View     temp_select (int i){        if (i == 1) return findViewById(R.id.seven_one_min);        if (i == 2) return findViewById(R.id.seven_two_min);        if (i == 3) return findViewById(R.id.seven_three__min);        if (i == 4) return findViewById(R.id.seven_four__min);        if (i == 5) return findViewById(R.id.seven_five__min);        if (i == 6) return findViewById(R.id.seven_six__min);     if (i == 7) return findViewById(R.id.seven_seven__min);return null;}    public View     date_select (int i){        if (i == 1) return findViewById(R.id.seven_one_date);        if (i == 2) return findViewById(R.id.seven_two_date);        if (i == 3) return findViewById(R.id.seven_three_date);        if (i == 4) return findViewById(R.id.seven_four_date);        if (i == 5) return findViewById(R.id.seven_five_date);        if (i == 6) return findViewById(R.id.seven_six_date);        if (i == 7) return findViewById(R.id.seven_seven_date);        return null;}    private String monthString(int monthNumber)    {        switch (monthNumber)        {            case 0:                return "January";            case 1:                return "February";            case 2:                return "March";            case 3:                return "April";            case 4:                return "May";            case 5:                return "June";            case 6:                return "July";            case 7:                return "August";            case 8:                return "September";            case 9:                return "October";            case 10:                return "November";            case 11:                return "December";            default:                System.out.println("Fatal Error");                System.exit(0);                return "Error"; //to keep the compiler happy        }    }    @Override    public void onClick(View v) {        if (v.getId() == R.id.button){            TableLayout hour = (TableLayout) findViewById(R.id.hour);            hour.setVisibility(View.VISIBLE);            Button button1 = (Button) findViewById(R.id.button1);            button1.setBackground(getResources().getDrawable(R.drawable.button1));            Button button = (Button) findViewById(R.id.button);            button.setBackground(getResources().getDrawable(R.drawable.button));            TableLayout days = (TableLayout) findViewById(R.id.seven);            days.setVisibility(View.GONE);            TableLayout add = (TableLayout) findViewById(R.id.plus);            add.setVisibility(View.VISIBLE);        }        else if (v.getId() == R.id.button1){            Button button = (Button) findViewById(R.id.button);            button.setBackground(getResources().getDrawable(R.drawable.button1));            Button button1 = (Button) findViewById(R.id.button1);            button1.setBackground(getResources().getDrawable(R.drawable.button));            TableLayout hour = (TableLayout) findViewById(R.id.hour);            hour.setVisibility(View.GONE);            TableLayout add = (TableLayout) findViewById(R.id.plus);            add.setVisibility(View.GONE);            TableLayout hour2 = (TableLayout) findViewById(R.id.hour2);            hour2.setVisibility(View.GONE);            TableLayout days = (TableLayout) findViewById(R.id.seven);            days.setVisibility(View.VISIBLE);        }   else if (v.getId() == R.id.plus){            TableLayout add = (TableLayout) findViewById(R.id.plus);            add.setVisibility(View.GONE);            TableLayout days = (TableLayout) findViewById(R.id.hour2);            days.setVisibility(View.VISIBLE);        }    }}